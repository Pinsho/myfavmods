{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar callback_to_promise_1 = __importDefault(require(\"./callback_to_promise\"));\n\nvar Record =\n/** @class */\nfunction () {\n  function Record(table, recordId, recordJson) {\n    this._table = table;\n    this.id = recordId || recordJson.id;\n    this.setRawJson(recordJson);\n    this.save = callback_to_promise_1.default(save, this);\n    this.patchUpdate = callback_to_promise_1.default(patchUpdate, this);\n    this.putUpdate = callback_to_promise_1.default(putUpdate, this);\n    this.destroy = callback_to_promise_1.default(destroy, this);\n    this.fetch = callback_to_promise_1.default(fetch, this);\n    this.updateFields = this.patchUpdate;\n    this.replaceFields = this.putUpdate;\n  }\n\n  Record.prototype.getId = function () {\n    return this.id;\n  };\n\n  Record.prototype.get = function (columnName) {\n    return this.fields[columnName];\n  };\n\n  Record.prototype.set = function (columnName, columnValue) {\n    this.fields[columnName] = columnValue;\n  };\n\n  Record.prototype.setRawJson = function (rawJson) {\n    this._rawJson = rawJson;\n    this.fields = this._rawJson && this._rawJson.fields || {};\n  };\n\n  return Record;\n}();\n\nfunction save(done) {\n  this.putUpdate(this.fields, done);\n}\n\nfunction patchUpdate(cellValuesByName, opts, done) {\n  var _this = this;\n\n  if (!done) {\n    done = opts;\n    opts = {};\n  }\n\n  var updateBody = __assign({\n    fields: cellValuesByName\n  }, opts);\n\n  this._table._base.runAction('patch', \"/\" + this._table._urlEncodedNameOrId() + \"/\" + this.id, {}, updateBody, function (err, response, results) {\n    if (err) {\n      done(err);\n      return;\n    }\n\n    _this.setRawJson(results);\n\n    done(null, _this);\n  });\n}\n\nfunction putUpdate(cellValuesByName, opts, done) {\n  var _this = this;\n\n  if (!done) {\n    done = opts;\n    opts = {};\n  }\n\n  var updateBody = __assign({\n    fields: cellValuesByName\n  }, opts);\n\n  this._table._base.runAction('put', \"/\" + this._table._urlEncodedNameOrId() + \"/\" + this.id, {}, updateBody, function (err, response, results) {\n    if (err) {\n      done(err);\n      return;\n    }\n\n    _this.setRawJson(results);\n\n    done(null, _this);\n  });\n}\n\nfunction destroy(done) {\n  var _this = this;\n\n  this._table._base.runAction('delete', \"/\" + this._table._urlEncodedNameOrId() + \"/\" + this.id, {}, null, function (err) {\n    if (err) {\n      done(err);\n      return;\n    }\n\n    done(null, _this);\n  });\n}\n\nfunction fetch(done) {\n  var _this = this;\n\n  this._table._base.runAction('get', \"/\" + this._table._urlEncodedNameOrId() + \"/\" + this.id, {}, null, function (err, response, results) {\n    if (err) {\n      done(err);\n      return;\n    }\n\n    _this.setRawJson(results);\n\n    done(null, _this);\n  });\n}\n\nmodule.exports = Record;","map":{"version":3,"mappings":"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","names":["table","recordId","recordJson","_table","id","setRawJson","save","callback_to_promise_1","patchUpdate","putUpdate","destroy","fetch","updateFields","replaceFields","Record","columnName","fields","columnValue","rawJson","_rawJson","done","cellValuesByName","opts","updateBody","_base","runAction","_urlEncodedNameOrId","err","response","results","_this","module"],"sources":["../src/record.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}