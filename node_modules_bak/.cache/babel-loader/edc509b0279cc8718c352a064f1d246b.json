{"ast":null,"code":"var _jsxFileName = \"E:\\\\Users\\\\Pinsho\\\\Documents\\\\Projects\\\\myfavmods\\\\src\\\\components\\\\ACCompetizioneModsGrid.js\",\n    _s2 = $RefreshSig$();\n\nimport styles from '../css/Grid.module.css';\nimport { ACCompetizioneOtherCard } from './ACCompetizioneOtherCard';\nimport Airtable from 'airtable';\nimport React, { useEffect, useState } from 'react';\nimport { Spinner } from './Spinner';\nimport NoResults from '../pages/NoResults';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst base = new Airtable({\n  apiKey: \"key03qIMV5bFoWdvj\"\n}).base('appxdFddKFJGA9LAb');\nexport function ACCompetizioneModsGrid() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [others, setOthers] = useState([]);\n  const [isLoading, SetIsLoading] = useState(true);\n\n  function useQuery() {\n    _s();\n\n    return new URLSearchParams(useLocation().search);\n  }\n\n  _s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n    return [useLocation];\n  });\n\n  const query = useQuery();\n  const search = query.get(\"search\");\n  useEffect(() => {\n    SetIsLoading(true);\n    const filter = search ? search : \"\";\n    const formulaOther = \"SUM(Search('\" + filter.toLowerCase() + \"', {Name_low}),Search('\" + filter.toLowerCase() + \"', {Type_low}))\";\n    base(\"accompetizioneother\").select({\n      view: \"Grid view\",\n      filterByFormula: formulaOther,\n      sort: [{\n        field: 'Name',\n        direction: 'asc'\n      }]\n    }).eachPage((records, fetchNextPage) => {\n      setOthers(records);\n      SetIsLoading(false);\n      fetchNextPage();\n    });\n  }, [search]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (others.length === 0) {\n    return /*#__PURE__*/_jsxDEV(NoResults, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.maintitleACOther,\n      id: \"other\",\n      children: \"Other\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.grid,\n      children: others.map(other => /*#__PURE__*/_jsxDEV(ACCompetizioneOtherCard, {\n        other: other\n      }, other.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(ACCompetizioneModsGrid, \"RtK4Pnf9k4s/pWjzEchc7+A3mko=\", true);\n\n_c = ACCompetizioneModsGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ACCompetizioneModsGrid\");","map":{"version":3,"sources":["E:/Users/Pinsho/Documents/Projects/myfavmods/src/components/ACCompetizioneModsGrid.js"],"names":["styles","ACCompetizioneOtherCard","Airtable","React","useEffect","useState","Spinner","NoResults","useLocation","base","apiKey","ACCompetizioneModsGrid","others","setOthers","isLoading","SetIsLoading","useQuery","URLSearchParams","search","query","get","filter","formulaOther","toLowerCase","select","view","filterByFormula","sort","field","direction","eachPage","records","fetchNextPage","length","maintitleACOther","grid","map","other","id"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,IAAI,GAAG,IAAIP,QAAJ,CAAa;AAAEQ,EAAAA,MAAM,EAAE;AAAV,CAAb,EAA8CD,IAA9C,CAAmD,mBAAnD,CAAb;AAEA,OAAO,SAASE,sBAAT,GAAkC;AAAA;;AAAA;;AACrC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAqBR,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;;AAEA,WAASW,QAAT,GAAoB;AAAA;;AAChB,WAAO,IAAKC,eAAL,CAAqBT,WAAW,GAAGU,MAAnC,CAAP;AACH;;AANoC,KAI5BF,QAJ4B;AAAA,YAKLR,WALK;AAAA;;AAQrC,QAAMW,KAAK,GAAGH,QAAQ,EAAtB;AACA,QAAME,MAAM,GAAGC,KAAK,CAACC,GAAN,CAAU,QAAV,CAAf;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,UAAMM,MAAM,GAAGH,MAAM,GACnBA,MADmB,GAEnB,EAFF;AAIA,UAAMI,YAAY,GAAG,iBAAiBD,MAAM,CAACE,WAAP,EAAjB,GAAwC,yBAAxC,GAAoEF,MAAM,CAACE,WAAP,EAApE,GAA2F,iBAAhH;AAEAd,IAAAA,IAAI,CAAC,qBAAD,CAAJ,CACKe,MADL,CACY;AACJC,MAAAA,IAAI,EAAE,WADF;AAEJC,MAAAA,eAAe,EAAEJ,YAFb;AAGJK,MAAAA,IAAI,EAAC,CACD;AACIC,QAAAA,KAAK,EAAE,MADX;AACmBC,QAAAA,SAAS,EAAE;AAD9B,OADC;AAHD,KADZ,EAUKC,QAVL,CAUc,CAACC,OAAD,EAAUC,aAAV,KAA4B;AAClCnB,MAAAA,SAAS,CAACkB,OAAD,CAAT;AACAhB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAiB,MAAAA,aAAa;AAChB,KAdL;AAeH,GAxBQ,EAwBN,CAACd,MAAD,CAxBM,CAAT;;AA0BA,MAAIJ,SAAJ,EAAc;AACV,wBACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAED,MAAGF,MAAM,CAACqB,MAAP,KAAkB,CAArB,EAAuB;AACnB,wBACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAED,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEjC,MAAM,CAACkC,gBAAvB;AAAyC,MAAA,EAAE,EAAC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAElC,MAAM,CAACmC,IAAtB;AAAA,gBACKvB,MAAM,CAACwB,GAAP,CAAYC,KAAD,iBACR,QAAC,uBAAD;AAAwC,QAAA,KAAK,EAAEA;AAA/C,SAA8BA,KAAK,CAACC,EAApC;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAUH;;IA3De3B,sB;;KAAAA,sB","sourcesContent":["import styles from '../css/Grid.module.css';\r\nimport { ACCompetizioneOtherCard } from './ACCompetizioneOtherCard';\r\nimport Airtable from 'airtable';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Spinner } from './Spinner';\r\nimport NoResults from '../pages/NoResults';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst base = new Airtable({ apiKey: \"key03qIMV5bFoWdvj\" }).base('appxdFddKFJGA9LAb');\r\n\r\nexport function ACCompetizioneModsGrid() {\r\n    const [others, setOthers] =useState([])\r\n    const [isLoading, SetIsLoading] = useState(true);\r\n\r\n    function useQuery() {\r\n        return new  URLSearchParams(useLocation().search);\r\n    }\r\n\r\n    const query = useQuery();\r\n    const search = query.get(\"search\");\r\n\r\n    useEffect(() => {\r\n        SetIsLoading(true);\r\n\r\n        const filter = search \r\n        ? search\r\n        : \"\";\r\n        \r\n        const formulaOther = \"SUM(Search('\" + filter.toLowerCase() + \"', {Name_low}),Search('\" + filter.toLowerCase() + \"', {Type_low}))\";\r\n\r\n        base(\"accompetizioneother\")\r\n            .select({ \r\n                view: \"Grid view\",\r\n                filterByFormula: formulaOther,\r\n                sort:[\r\n                    {\r\n                        field: 'Name', direction: 'asc'\r\n                    }\r\n                ],\r\n            })\r\n            .eachPage((records, fetchNextPage) => {\r\n                setOthers(records)\r\n                SetIsLoading(false);\r\n                fetchNextPage();\r\n            })\r\n    }, [search]);\r\n\r\n    if (isLoading){\r\n        return(\r\n            <Spinner/>\r\n        )\r\n    }\r\n\r\n    if(others.length === 0){\r\n        return(\r\n            <NoResults/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.maintitleACOther} id=\"other\">Other</div>\r\n            <ul className={styles.grid}>\r\n                {others.map((other) => (\r\n                    <ACCompetizioneOtherCard key={other.id} other={other} />\r\n                ))}\r\n            </ul>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}