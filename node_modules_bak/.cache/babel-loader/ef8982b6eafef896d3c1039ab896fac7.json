{"ast":null,"code":"import _slicedToArray from\"E:/Users/Pinsho/Documents/Projects/myfavmods/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import styles from'../css/Grid.module.css';import{MusicDawCard}from'./MusicDawCard';import{MusicVstCard}from'./MusicVstCard';import{MusicSamplesCard}from'./MusicSamplesCard';import Airtable from'airtable';import React,{useEffect,useState}from'react';import{Spinner}from'./Spinner';import NoResults from'../pages/NoResults';import{useLocation}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var base=new Airtable({apiKey:\"key03qIMV5bFoWdvj\"}).base('appxdFddKFJGA9LAb');export function MusicModsGrid(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),daws=_useState2[0],setDaws=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),vsts=_useState4[0],setVsts=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),samples=_useState6[0],setSamples=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),isLoading=_useState8[0],SetIsLoading=_useState8[1];function useQuery(){return new URLSearchParams(useLocation().search);}var query=useQuery();var search=query.get(\"search\");useEffect(function(){SetIsLoading(true);var filter=search?search:\"\";var formulaDAW=\"SUM(Search('\"+filter.toLowerCase()+\"', {Name_low}),Search('\"+filter.toLowerCase()+\"', {Developer_low}),Search('\"+filter.toLowerCase()+\"', {Platform_low}))\";var formulaVST=\"SUM(Search('\"+filter.toLowerCase()+\"', {Name_low}),Search('\"+filter.toLowerCase()+\"', {Developer_low}),Search('\"+filter.toLowerCase()+\"', {Platform_low}),Search('\"+filter.toLowerCase()+\"', {Type_low}))\";var formulaSamples=\"SUM(Search('\"+filter.toLowerCase()+\"', {Name_low}),Search('\"+filter.toLowerCase()+\"', {Developer_low}),Search('\"+filter.toLowerCase()+\"', {Genre_low}))\";base(\"musicdaw\").select({view:\"Grid view\",filterByFormula:formulaDAW,sort:[{field:'Name',direction:'asc'}]}).eachPage(function(records,fetchNextPage){setDaws(records);fetchNextPage();});base(\"musicvst\").select({view:\"Grid view\",filterByFormula:formulaVST,sort:[{field:'Name',direction:'asc'}]}).eachPage(function(records,fetchNextPage){setVsts(records);fetchNextPage();});base(\"musicsamples\").select({view:\"Grid view\",filterByFormula:formulaSamples,sort:[{field:'Name',direction:'asc'}]}).eachPage(function(records,fetchNextPage){setSamples(records);SetIsLoading(false);fetchNextPage();});},[search]);if(isLoading){return/*#__PURE__*/_jsx(Spinner,{});}if(daws.length===0&&vsts.length===0&&samples.length===0){return/*#__PURE__*/_jsx(NoResults,{});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:styles.maintitleMusicDaw,id:\"daws\",children:\"DAWs\"}),/*#__PURE__*/_jsx(\"ul\",{className:styles.grid,children:daws.map(function(daw){return/*#__PURE__*/_jsx(MusicDawCard,{daw:daw},daw.id);})}),/*#__PURE__*/_jsx(\"div\",{className:styles.maintitleMusicVST,id:\"vsts\",children:\"VSTs\"}),/*#__PURE__*/_jsx(\"ul\",{className:styles.grid,children:vsts.map(function(vst){return/*#__PURE__*/_jsx(MusicVstCard,{vst:vst},vst.id);})}),/*#__PURE__*/_jsx(\"div\",{className:styles.maintitleMusicSamples,id:\"samples\",children:\"Samples\"}),/*#__PURE__*/_jsx(\"ul\",{className:styles.grid,children:samples.map(function(sample){return/*#__PURE__*/_jsx(MusicSamplesCard,{sample:sample},sample.id);})})]});}","map":{"version":3,"sources":["E:/Users/Pinsho/Documents/Projects/myfavmods/src/components/MusicModsGrid.js"],"names":["styles","MusicDawCard","MusicVstCard","MusicSamplesCard","Airtable","React","useEffect","useState","Spinner","NoResults","useLocation","base","apiKey","MusicModsGrid","daws","setDaws","vsts","setVsts","samples","setSamples","isLoading","SetIsLoading","useQuery","URLSearchParams","search","query","get","filter","formulaDAW","toLowerCase","formulaVST","formulaSamples","select","view","filterByFormula","sort","field","direction","eachPage","records","fetchNextPage","length","maintitleMusicDaw","grid","map","daw","id","maintitleMusicVST","vst","maintitleMusicSamples","sample"],"mappings":"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","sourcesContent":["import styles from '../css/Grid.module.css';\r\nimport { MusicDawCard } from './MusicDawCard';\r\nimport { MusicVstCard } from './MusicVstCard';\r\nimport { MusicSamplesCard } from './MusicSamplesCard';\r\nimport Airtable from 'airtable';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Spinner } from './Spinner';\r\nimport NoResults from '../pages/NoResults';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst base = new Airtable({ apiKey: \"key03qIMV5bFoWdvj\" }).base('appxdFddKFJGA9LAb');\r\n\r\nexport function MusicModsGrid() {\r\n    const [daws, setDaws] =useState([])\r\n    const [vsts, setVsts] =useState([])\r\n    const [samples, setSamples] = useState([])\r\n    const [isLoading, SetIsLoading] = useState(true);\r\n\r\n    function useQuery() {\r\n        return new  URLSearchParams(useLocation().search);\r\n    }\r\n\r\n    const query = useQuery();\r\n    const search = query.get(\"search\");\r\n\r\n    useEffect(() => {\r\n        SetIsLoading(true);\r\n\r\n        const filter = search \r\n        ? search\r\n        : \"\";\r\n\r\n        const formulaDAW = \"SUM(Search('\" + filter.toLowerCase() + \"', {Name_low}),Search('\" + filter.toLowerCase() + \"', {Developer_low}),Search('\" + filter.toLowerCase() + \"', {Platform_low}))\";\r\n        const formulaVST = \"SUM(Search('\" + filter.toLowerCase() + \"', {Name_low}),Search('\" + filter.toLowerCase() + \"', {Developer_low}),Search('\" + filter.toLowerCase() + \"', {Platform_low}),Search('\" + filter.toLowerCase() + \"', {Type_low}))\";\r\n        const formulaSamples = \"SUM(Search('\" + filter.toLowerCase() + \"', {Name_low}),Search('\" + filter.toLowerCase() + \"', {Developer_low}),Search('\" + filter.toLowerCase() + \"', {Genre_low}))\";\r\n\r\n        base(\"musicdaw\")\r\n            .select({ \r\n                view: \"Grid view\",\r\n                filterByFormula: formulaDAW,\r\n                sort:[\r\n                    {\r\n                        field: 'Name', direction: 'asc'\r\n                    }\r\n                ],\r\n            })\r\n            .eachPage((records, fetchNextPage) => {\r\n                setDaws(records)\r\n                fetchNextPage();\r\n            })\r\n        base(\"musicvst\")\r\n            .select({ \r\n                view: \"Grid view\",\r\n                filterByFormula: formulaVST,\r\n                sort:[\r\n                    {\r\n                        field: 'Name', direction: 'asc'\r\n                    }\r\n                ],\r\n            })\r\n            .eachPage((records, fetchNextPage) => {\r\n                setVsts(records)\r\n                fetchNextPage();\r\n            })\r\n        base(\"musicsamples\")\r\n            .select({ \r\n                view: \"Grid view\",\r\n                filterByFormula: formulaSamples,\r\n                sort:[\r\n                    {\r\n                        field: 'Name', direction: 'asc'\r\n                    }\r\n                ],\r\n            })\r\n            .eachPage((records, fetchNextPage) => {\r\n                setSamples(records)\r\n                SetIsLoading(false);\r\n                fetchNextPage();\r\n            })\r\n    }, [search]);\r\n\r\n    if (isLoading){\r\n        return(\r\n            <Spinner/>\r\n        )\r\n    }\r\n\r\n    if(daws.length === 0 && vsts.length === 0 && samples.length === 0){\r\n        return(\r\n            <NoResults/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.maintitleMusicDaw} id=\"daws\">DAWs</div>\r\n            <ul className={styles.grid}>\r\n                {daws.map((daw) => (\r\n                    <MusicDawCard key={daw.id} daw={daw} />\r\n                ))}\r\n            </ul>\r\n            <div className={styles.maintitleMusicVST} id=\"vsts\">VSTs</div>\r\n            <ul className={styles.grid}>\r\n                {vsts.map((vst) => (\r\n                    <MusicVstCard key={vst.id} vst={vst} />\r\n                ))}\r\n            </ul>\r\n            <div className={styles.maintitleMusicSamples} id=\"samples\">Samples</div>\r\n            <ul className={styles.grid}>\r\n                {samples.map((sample) => (\r\n                    <MusicSamplesCard key={sample.id} sample={sample} />\r\n                ))}\r\n            </ul>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}