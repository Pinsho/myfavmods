{"ast":null,"code":"\"use strict\";\n\nvar didWarnForDeprecation = {};\n/**\n * Convenience function for marking a function as deprecated.\n *\n * Will emit a warning the first time that function is called.\n *\n * @param fn the function to mark as deprecated.\n * @param key a unique key identifying the function.\n * @param message the warning message.\n *\n * @return a wrapped function\n */\n\nfunction deprecate(fn, key, message) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (!didWarnForDeprecation[key]) {\n      didWarnForDeprecation[key] = true;\n      console.warn(message);\n    }\n\n    fn.apply(this, args);\n  };\n}\n\nmodule.exports = deprecate;","map":{"version":3,"mappings":";;AAAA,IAAMA,qBAAqB,GAAG,EAA9B;AAEA;;;;;;;;;;;;AAWA,SAASC,SAAT,CAA2CC,EAA3C,EAAwEC,GAAxE,EAAqFC,OAArF,EAAoG;AAChG,SAAO;AAAS;;SAAA,yCAAa;AAAbC;;;AACZ,QAAI,CAACL,qBAAqB,CAACG,GAAD,CAA1B,EAAiC;AAC7BH,2BAAqB,CAACG,GAAD,CAArB,GAA6B,IAA7B;AACAG,aAAO,CAACC,IAAR,CAAaH,OAAb;AACH;;AACDF,MAAE,CAACM,KAAH,CAAS,IAAT,EAAeH,IAAf;AACH,GAND;AAOH;;AAEDI,iBAASR,SAAT","names":["didWarnForDeprecation","deprecate","fn","key","message","args","console","warn","apply","module"],"sources":["../src/deprecate.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}