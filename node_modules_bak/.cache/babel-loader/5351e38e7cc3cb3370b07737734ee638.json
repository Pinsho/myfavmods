{"ast":null,"code":"var _jsxFileName = \"E:\\\\Users\\\\Pinsho\\\\Documents\\\\Projects\\\\myfavmods\\\\src\\\\components\\\\AMS2ModsGrid.js\",\n    _s2 = $RefreshSig$();\n\nimport styles from '../css/Grid.module.css';\nimport { AMS2CarCard } from './AMS2CarCard';\nimport { AMS2TrackCard } from './AMS2TrackCard';\nimport { AMS2OtherCard } from './AMS2OtherCard';\nimport Airtable from 'airtable';\nimport React, { useEffect, useState } from 'react';\nimport { Spinner } from './Spinner';\nimport NoResults from '../pages/NoResults';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst base = new Airtable({\n  apiKey: \"key03qIMV5bFoWdvj\"\n}).base('appxdFddKFJGA9LAb');\nexport function AMS2ModsGrid() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [cars, setCars] = useState([]);\n  const [tracks, setTracks] = useState([]);\n  const [others, setOther] = useState([]);\n  const [isLoading, SetIsLoading] = useState(true);\n\n  function useQuery() {\n    _s();\n\n    return new URLSearchParams(useLocation().search);\n  }\n\n  _s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n    return [useLocation];\n  });\n\n  const query = useQuery();\n  const search = query.get(\"search\");\n  useEffect(() => {\n    SetIsLoading(true);\n    const filter = search ? search : \"\";\n    const formulaCars = \"SUM(Search('\" + filter.toLowerCase() + \"', {Name_low}),Search('\" + filter.toLowerCase() + \"', {Type_low}),Search('\" + filter.toLowerCase() + \"', {WheelDrive_low}),Search('\" + filter.toLowerCase() + \"', {BHP_low}))\";\n    const formulaTracks = \"SUM(Search('\" + filter.toLowerCase() + \"', {Name_low}),Search('\" + filter.toLowerCase() + \"', {Location_low}),Search('\" + filter.toLowerCase() + \"', {Length_low}))\";\n    const formulaOther = \"SUM(Search('\" + filter.toLowerCase() + \"', {Name_low}),Search('\" + filter.toLowerCase() + \"', {Type_low}))\";\n    base(\"ams2cars\").select({\n      view: \"Grid view\",\n      filterByFormula: formulaCars,\n      sort: [{\n        field: 'Name',\n        direction: 'asc'\n      }]\n    }).eachPage((records, fetchNextPage) => {\n      setCars(records);\n      SetIsLoading(false);\n      fetchNextPage();\n    });\n    base(\"ams2tracks\").select({\n      view: \"Grid view\",\n      filterByFormula: formulaTracks,\n      sort: [{\n        field: 'Name',\n        direction: 'asc'\n      }]\n    }).eachPage((records, fetchNextPage) => {\n      setTracks(records);\n      fetchNextPage();\n    });\n    base(\"ams2other\").select({\n      view: \"Grid view\",\n      filterByFormula: formulaOther,\n      sort: [{\n        field: 'Name',\n        direction: 'asc'\n      }]\n    }).eachPage((records, fetchNextPage) => {\n      setOther(records);\n      fetchNextPage();\n    });\n  }, [search]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (cars.length === 0 && tracks.length === 0 && others.length === 0) {\n    return /*#__PURE__*/_jsxDEV(NoResults, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.maintitleRf2Cars,\n      id: \"cars\",\n      children: \"Cars\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.grid,\n      children: cars.map(car => /*#__PURE__*/_jsxDEV(AMS2CarCard, {\n        car: car\n      }, car.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.maintitleRf2Tracks,\n      id: \"tracks\",\n      children: \"Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.grid,\n      children: tracks.map(track => /*#__PURE__*/_jsxDEV(AMS2TrackCard, {\n        track: track\n      }, track.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.maintitleRf2Other,\n      id: \"other\",\n      children: \"Other\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.grid,\n      children: others.map(other => /*#__PURE__*/_jsxDEV(AMS2OtherCard, {\n        other: other\n      }, other.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(AMS2ModsGrid, \"VwRxCyjdSe2TCIUfSzu5nFmQNlE=\", true);\n\n_c = AMS2ModsGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"AMS2ModsGrid\");","map":{"version":3,"sources":["E:/Users/Pinsho/Documents/Projects/myfavmods/src/components/AMS2ModsGrid.js"],"names":["styles","AMS2CarCard","AMS2TrackCard","AMS2OtherCard","Airtable","React","useEffect","useState","Spinner","NoResults","useLocation","base","apiKey","AMS2ModsGrid","cars","setCars","tracks","setTracks","others","setOther","isLoading","SetIsLoading","useQuery","URLSearchParams","search","query","get","filter","formulaCars","toLowerCase","formulaTracks","formulaOther","select","view","filterByFormula","sort","field","direction","eachPage","records","fetchNextPage","length","maintitleRf2Cars","grid","map","car","id","maintitleRf2Tracks","track","maintitleRf2Other","other"],"mappings":"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","sourcesContent":["import styles from '../css/Grid.module.css';\r\nimport { AMS2CarCard } from './AMS2CarCard';\r\nimport { AMS2TrackCard } from './AMS2TrackCard';\r\nimport { AMS2OtherCard } from './AMS2OtherCard';\r\nimport Airtable from 'airtable';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Spinner } from './Spinner';\r\nimport NoResults from '../pages/NoResults';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst base = new Airtable({ apiKey: \"key03qIMV5bFoWdvj\" }).base('appxdFddKFJGA9LAb');\r\n\r\nexport function AMS2ModsGrid() {\r\n    const [cars, setCars] =useState([])\r\n    const [tracks, setTracks] =useState([])\r\n    const [others, setOther] =useState([])\r\n    const [isLoading, SetIsLoading] = useState(true);\r\n\r\n    function useQuery() {\r\n        return new  URLSearchParams(useLocation().search);\r\n    }\r\n\r\n    const query = useQuery();\r\n    const search = query.get(\"search\");\r\n\r\n    useEffect(() => {\r\n        SetIsLoading(true);\r\n\r\n        const filter = search \r\n        ? search\r\n        : \"\";\r\n\r\n        const formulaCars = \"SUM(Search('\" + filter.toLowerCase() + \"', {Name_low}),Search('\" + filter.toLowerCase() + \"', {Type_low}),Search('\" + filter.toLowerCase() + \"', {WheelDrive_low}),Search('\" + filter.toLowerCase() + \"', {BHP_low}))\";\r\n        const formulaTracks = \"SUM(Search('\" + filter.toLowerCase() + \"', {Name_low}),Search('\" + filter.toLowerCase() + \"', {Location_low}),Search('\" + filter.toLowerCase() + \"', {Length_low}))\";\r\n        const formulaOther = \"SUM(Search('\" + filter.toLowerCase() + \"', {Name_low}),Search('\" + filter.toLowerCase() + \"', {Type_low}))\";\r\n\r\n        base(\"ams2cars\")\r\n        .select({ \r\n            view: \"Grid view\",\r\n            filterByFormula: formulaCars,\r\n            sort:[\r\n                {\r\n                    field: 'Name', direction: 'asc'\r\n                }\r\n            ],\r\n        })\r\n            .eachPage((records, fetchNextPage) => {\r\n                setCars(records)\r\n                SetIsLoading(false);\r\n                fetchNextPage();\r\n            })\r\n        base(\"ams2tracks\")\r\n            .select({ \r\n                view: \"Grid view\",\r\n                filterByFormula: formulaTracks,\r\n                sort:[\r\n                    {\r\n                        field: 'Name', direction: 'asc'\r\n                    }\r\n                ],\r\n            })\r\n            .eachPage((records, fetchNextPage) => {\r\n                setTracks(records)\r\n                fetchNextPage();\r\n            })\r\n        base(\"ams2other\")\r\n            .select({ \r\n                view: \"Grid view\",\r\n                filterByFormula: formulaOther,\r\n                sort:[\r\n                    {\r\n                        field: 'Name', direction: 'asc'\r\n                    }\r\n                ],\r\n            })\r\n            .eachPage((records, fetchNextPage) => {\r\n                setOther(records)\r\n                fetchNextPage();\r\n            })\r\n    }, [search]);\r\n\r\n    if (isLoading){\r\n        return(\r\n            <Spinner/>\r\n        )\r\n    }\r\n\r\n    if(cars.length === 0 && tracks.length === 0 && others.length === 0){\r\n        return(\r\n            <NoResults/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.maintitleRf2Cars} id=\"cars\">Cars</div>\r\n            <ul className={styles.grid}>\r\n                {cars.map((car) => (\r\n                    <AMS2CarCard key={car.id} car={car} />\r\n                ))}\r\n            </ul>\r\n            <div className={styles.maintitleRf2Tracks} id=\"tracks\">Tracks</div>\r\n            <ul className={styles.grid}>\r\n                {tracks.map((track) => (\r\n                    <AMS2TrackCard key={track.id} track={track} />\r\n                ))}\r\n            </ul>\r\n            <div className={styles.maintitleRf2Other} id=\"other\">Other</div>\r\n            <ul className={styles.grid}>\r\n                {others.map((other) => (\r\n                    <AMS2OtherCard key={other.id} other={other} />\r\n                ))}\r\n            </ul>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}