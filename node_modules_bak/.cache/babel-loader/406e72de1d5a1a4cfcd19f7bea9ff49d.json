{"ast":null,"code":"var _jsxFileName = \"E:\\\\Users\\\\Pinsho\\\\Documents\\\\Projects\\\\myfavmods\\\\src\\\\components\\\\DCSModsGrid.js\",\n    _s2 = $RefreshSig$();\n\nimport styles from '../css/Grid.module.css';\nimport '../css/Grid.module.css';\nimport { DCSModCard } from './DCSModCard';\nimport { DCSMissionCard } from './DCSMissionCard';\nimport { DCSOtherCard } from './DCSOtherCard';\nimport Airtable from 'airtable';\nimport React, { useEffect, useState } from 'react';\nimport { Spinner } from './Spinner';\nimport { useLocation } from 'react-router-dom';\nimport NoResults from '../pages/NoResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst base = new Airtable({\n  apiKey: \"key03qIMV5bFoWdvj\"\n}).base('appxdFddKFJGA9LAb');\nexport function DCSModsGrid() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [mods, setMods] = useState([]);\n  const [missions, setMissions] = useState([]);\n  const [others, setOther] = useState([]);\n  const [isLoading, SetIsLoading] = useState(true);\n\n  function useQuery() {\n    _s();\n\n    return new URLSearchParams(useLocation().search);\n  }\n\n  _s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n    return [useLocation];\n  });\n\n  const query = useQuery();\n  const search = query.get(\"search\");\n  useEffect(() => {\n    SetIsLoading(true);\n    const filter = search ? search : \"\";\n    const formulaMods = \"SUM(Search('\" + filter.toLowerCase() + \"', {Name_low}),Search('\" + filter.toLowerCase() + \"', {Type_low}),Search('\" + filter.toLowerCase() + \"', {Manufacturer_low}),Search('\" + filter.toLowerCase() + \"', {Year}))\";\n    const formulaMissions = \"SUM(Search('\" + filter.toLowerCase() + \"', {Name_low}),Search('\" + filter.toLowerCase() + \"', {Type_low}),Search('\" + filter.toLowerCase() + \"', {Unit_low}),Search('\" + filter.toLowerCase() + \"', {Map_low}),Search('\" + filter.toLowerCase() + \"', {AditionalMods_low}))\";\n    const formulaOther = \"SUM(Search('\" + filter.toLowerCase() + \"', {Name_low}),Search('\" + filter.toLowerCase() + \"', {Type_low}))\";\n    base(\"dcsmods\").select({\n      view: \"Grid view\",\n\n      /* === USE filterByFormula: \"Search('Some_Text',{Field_Name})\" === */\n\n      /* filterByFormula: \"Search('\" + filter.toLowerCase() + \"', {Name_low})\", */\n      filterByFormula: formulaMods,\n      sort: [{\n        field: 'Name',\n        direction: 'asc'\n      }]\n    }).eachPage((records, fetchNextPage) => {\n      setMods(records);\n      fetchNextPage();\n    });\n    base(\"dcsmissions\").select({\n      view: \"Grid view\",\n      filterByFormula: formulaMissions,\n      sort: [{\n        field: 'Name',\n        direction: 'asc'\n      }]\n    }).eachPage((records, fetchNextPage) => {\n      setMissions(records);\n      fetchNextPage();\n    });\n    base(\"dcsother\").select({\n      view: \"Grid view\",\n      filterByFormula: formulaOther,\n      sort: [{\n        field: 'Name',\n        direction: 'asc'\n      }]\n    }).eachPage((records, fetchNextPage) => {\n      setOther(records);\n      fetchNextPage();\n      SetIsLoading(false);\n    });\n  }, [search]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (mods.length === 0 && missions.length === 0 && others.length === 0) {\n    return /*#__PURE__*/_jsxDEV(NoResults, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.maintitleDCSMods,\n      id: \"mods\",\n      children: \"MODs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.grid,\n        children: mods.map(mod => /*#__PURE__*/_jsxDEV(DCSModCard, {\n          mod: mod\n        }, mod.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.maintitleDCSMissions,\n      id: \"missions\",\n      children: \"Missions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.grid,\n      children: missions.map(mission => /*#__PURE__*/_jsxDEV(DCSMissionCard, {\n        mission: mission\n      }, mission.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.maintitleDCSOther,\n      id: \"other\",\n      children: \"Other\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.grid,\n      children: others.map(other => /*#__PURE__*/_jsxDEV(DCSOtherCard, {\n        other: other\n      }, other.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(DCSModsGrid, \"ALJGcrh626jXO0KaxWhBjkIGOWo=\", true);\n\n_c = DCSModsGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"DCSModsGrid\");","map":{"version":3,"sources":["E:/Users/Pinsho/Documents/Projects/myfavmods/src/components/DCSModsGrid.js"],"names":["styles","DCSModCard","DCSMissionCard","DCSOtherCard","Airtable","React","useEffect","useState","Spinner","useLocation","NoResults","base","apiKey","DCSModsGrid","mods","setMods","missions","setMissions","others","setOther","isLoading","SetIsLoading","useQuery","URLSearchParams","search","query","get","filter","formulaMods","toLowerCase","formulaMissions","formulaOther","select","view","filterByFormula","sort","field","direction","eachPage","records","fetchNextPage","length","maintitleDCSMods","grid","map","mod","id","maintitleDCSMissions","mission","maintitleDCSOther","other"],"mappings":"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","sourcesContent":["import styles from '../css/Grid.module.css';\r\nimport '../css/Grid.module.css';\r\nimport { DCSModCard } from './DCSModCard';\r\nimport { DCSMissionCard } from './DCSMissionCard';\r\nimport { DCSOtherCard } from './DCSOtherCard';\r\nimport Airtable from 'airtable';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Spinner } from './Spinner';\r\nimport { useLocation } from 'react-router-dom';\r\nimport NoResults from '../pages/NoResults';\r\n\r\nconst base = new Airtable({ apiKey: \"key03qIMV5bFoWdvj\" }).base('appxdFddKFJGA9LAb');\r\n\r\n\r\nexport function DCSModsGrid() {\r\n\r\n    const [mods, setMods] = useState([]);\r\n    const [missions, setMissions] = useState([]);\r\n    const [others, setOther] = useState([]);\r\n    const [isLoading, SetIsLoading] = useState(true);\r\n    \r\n    function useQuery() {\r\n        return new URLSearchParams(useLocation().search);\r\n    }\r\n\r\n    const query = useQuery();\r\n    const search = query.get(\"search\");\r\n\r\n    useEffect(() => {\r\n        SetIsLoading(true);\r\n\r\n        const filter = search \r\n        ? search\r\n        : \"\";\r\n\r\n        const formulaMods = \"SUM(Search('\" + filter.toLowerCase() + \"', {Name_low}),Search('\" + filter.toLowerCase() + \"', {Type_low}),Search('\" + filter.toLowerCase() + \"', {Manufacturer_low}),Search('\" + filter.toLowerCase() + \"', {Year}))\";\r\n        const formulaMissions = \"SUM(Search('\" + filter.toLowerCase() + \"', {Name_low}),Search('\" + filter.toLowerCase() + \"', {Type_low}),Search('\" + filter.toLowerCase() + \"', {Unit_low}),Search('\" + filter.toLowerCase() + \"', {Map_low}),Search('\" + filter.toLowerCase() + \"', {AditionalMods_low}))\";\r\n        const formulaOther = \"SUM(Search('\" + filter.toLowerCase() + \"', {Name_low}),Search('\" + filter.toLowerCase() + \"', {Type_low}))\";\r\n\r\n        base(\"dcsmods\")\r\n            .select({ \r\n                view: \"Grid view\",\r\n                /* === USE filterByFormula: \"Search('Some_Text',{Field_Name})\" === */\r\n                /* filterByFormula: \"Search('\" + filter.toLowerCase() + \"', {Name_low})\", */\r\n                filterByFormula: formulaMods,\r\n                sort:[\r\n                    {\r\n                        field: 'Name', direction: 'asc'\r\n                    }\r\n                ],\r\n            })\r\n            .eachPage((records, fetchNextPage) => {\r\n                setMods(records)\r\n                fetchNextPage();\r\n                \r\n            })\r\n        base(\"dcsmissions\")\r\n            .select({ \r\n                view: \"Grid view\",\r\n                filterByFormula: formulaMissions,\r\n                sort:[\r\n                    {\r\n                        field: 'Name', direction: 'asc'\r\n                    }\r\n                ],\r\n            })\r\n            .eachPage((records, fetchNextPage) => {\r\n                setMissions(records)\r\n                fetchNextPage();\r\n            })\r\n        base(\"dcsother\")\r\n            .select({ \r\n                view: \"Grid view\",\r\n                filterByFormula: formulaOther,\r\n                sort:[\r\n                    {\r\n                        field: 'Name', direction: 'asc'\r\n                    }\r\n                ],\r\n            })\r\n            .eachPage((records, fetchNextPage) => {\r\n                setOther(records)\r\n                fetchNextPage();\r\n                SetIsLoading(false)\r\n            })\r\n            \r\n    }, [search]);\r\n\r\n    \r\n\r\n    if (isLoading){\r\n        return(\r\n            <Spinner/>\r\n        )\r\n    }\r\n    \r\n    if(mods.length === 0 && missions.length === 0 && others.length === 0){\r\n        return(\r\n            <NoResults/>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className={styles.maintitleDCSMods} id=\"mods\">MODs</div>\r\n            <div>\r\n                <ul className={styles.grid}>\r\n                    {mods.map((mod) => (\r\n                        <DCSModCard key={mod.id} mod={mod} />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className={styles.maintitleDCSMissions} id=\"missions\">Missions</div>\r\n            <ul className={styles.grid}>\r\n                {missions.map((mission) => (\r\n                    <DCSMissionCard key={mission.id} mission={mission} />\r\n                ))}\r\n            </ul>\r\n            <div className={styles.maintitleDCSOther} id=\"other\">Other</div>\r\n            <ul className={styles.grid}>\r\n                {others.map((other) => (\r\n                    <DCSOtherCard key={other.id} other={other} />\r\n                ))}\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}