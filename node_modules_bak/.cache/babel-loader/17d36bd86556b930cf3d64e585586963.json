{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar isPlainObject_1 = __importDefault(require(\"lodash/isPlainObject\"));\n\nvar deprecate_1 = __importDefault(require(\"./deprecate\"));\n\nvar query_1 = __importDefault(require(\"./query\"));\n\nvar record_1 = __importDefault(require(\"./record\"));\n\nvar callback_to_promise_1 = __importDefault(require(\"./callback_to_promise\"));\n\nvar Table =\n/** @class */\nfunction () {\n  function Table(base, tableId, tableName) {\n    if (!tableId && !tableName) {\n      throw new Error('Table name or table ID is required');\n    }\n\n    this._base = base;\n    this.id = tableId;\n    this.name = tableName; // Public API\n\n    this.find = callback_to_promise_1.default(this._findRecordById, this);\n    this.select = this._selectRecords.bind(this);\n    this.create = callback_to_promise_1.default(this._createRecords, this);\n    this.update = callback_to_promise_1.default(this._updateRecords.bind(this, false), this);\n    this.replace = callback_to_promise_1.default(this._updateRecords.bind(this, true), this);\n    this.destroy = callback_to_promise_1.default(this._destroyRecord, this); // Deprecated API\n\n    this.list = deprecate_1.default(this._listRecords.bind(this), 'table.list', 'Airtable: `list()` is deprecated. Use `select()` instead.');\n    this.forEach = deprecate_1.default(this._forEachRecord.bind(this), 'table.forEach', 'Airtable: `forEach()` is deprecated. Use `select()` instead.');\n  }\n\n  Table.prototype._findRecordById = function (recordId, done) {\n    var record = new record_1.default(this, recordId);\n    record.fetch(done);\n  };\n\n  Table.prototype._selectRecords = function (params) {\n    if (params === void 0) {\n      params = {};\n    }\n\n    if (arguments.length > 1) {\n      console.warn(\"Airtable: `select` takes only one parameter, but it was given \" + arguments.length + \" parameters. Use `eachPage` or `firstPage` to fetch records.\");\n    }\n\n    if (isPlainObject_1.default(params)) {\n      var validationResults = query_1.default.validateParams(params);\n\n      if (validationResults.errors.length) {\n        var formattedErrors = validationResults.errors.map(function (error) {\n          return \"  * \" + error;\n        });\n        throw new Error(\"Airtable: invalid parameters for `select`:\\n\" + formattedErrors.join('\\n'));\n      }\n\n      if (validationResults.ignoredKeys.length) {\n        console.warn(\"Airtable: the following parameters to `select` will be ignored: \" + validationResults.ignoredKeys.join(', '));\n      }\n\n      return new query_1.default(this, validationResults.validParams);\n    } else {\n      throw new Error('Airtable: the parameter for `select` should be a plain object or undefined.');\n    }\n  };\n\n  Table.prototype._urlEncodedNameOrId = function () {\n    return this.id || encodeURIComponent(this.name);\n  };\n\n  Table.prototype._createRecords = function (recordsData, optionalParameters, done) {\n    var _this = this;\n\n    var isCreatingMultipleRecords = Array.isArray(recordsData);\n\n    if (!done) {\n      done = optionalParameters;\n      optionalParameters = {};\n    }\n\n    var requestData;\n\n    if (isCreatingMultipleRecords) {\n      requestData = __assign({\n        records: recordsData\n      }, optionalParameters);\n    } else {\n      requestData = __assign({\n        fields: recordsData\n      }, optionalParameters);\n    }\n\n    this._base.runAction('post', \"/\" + this._urlEncodedNameOrId() + \"/\", {}, requestData, function (err, resp, body) {\n      if (err) {\n        done(err);\n        return;\n      }\n\n      var result;\n\n      if (isCreatingMultipleRecords) {\n        result = body.records.map(function (record) {\n          return new record_1.default(_this, record.id, record);\n        });\n      } else {\n        result = new record_1.default(_this, body.id, body);\n      }\n\n      done(null, result);\n    });\n  };\n\n  Table.prototype._updateRecords = function (isDestructiveUpdate, recordsDataOrRecordId, recordDataOrOptsOrDone, optsOrDone, done) {\n    var _this = this;\n\n    var opts;\n\n    if (Array.isArray(recordsDataOrRecordId)) {\n      var recordsData = recordsDataOrRecordId;\n      opts = isPlainObject_1.default(recordDataOrOptsOrDone) ? recordDataOrOptsOrDone : {};\n      done = optsOrDone || recordDataOrOptsOrDone;\n      var method = isDestructiveUpdate ? 'put' : 'patch';\n\n      var requestData = __assign({\n        records: recordsData\n      }, opts);\n\n      this._base.runAction(method, \"/\" + this._urlEncodedNameOrId() + \"/\", {}, requestData, function (err, resp, body) {\n        if (err) {\n          done(err);\n          return;\n        }\n\n        var result = body.records.map(function (record) {\n          return new record_1.default(_this, record.id, record);\n        });\n        done(null, result);\n      });\n    } else {\n      var recordId = recordsDataOrRecordId;\n      var recordData = recordDataOrOptsOrDone;\n      opts = isPlainObject_1.default(optsOrDone) ? optsOrDone : {};\n      done = done || optsOrDone;\n      var record = new record_1.default(this, recordId);\n\n      if (isDestructiveUpdate) {\n        record.putUpdate(recordData, opts, done);\n      } else {\n        record.patchUpdate(recordData, opts, done);\n      }\n    }\n  };\n\n  Table.prototype._destroyRecord = function (recordIdsOrId, done) {\n    var _this = this;\n\n    if (Array.isArray(recordIdsOrId)) {\n      var queryParams = {\n        records: recordIdsOrId\n      };\n\n      this._base.runAction('delete', \"/\" + this._urlEncodedNameOrId(), queryParams, null, function (err, response, results) {\n        if (err) {\n          done(err);\n          return;\n        }\n\n        var records = results.records.map(function (_a) {\n          var id = _a.id;\n          return new record_1.default(_this, id, null);\n        });\n        done(null, records);\n      });\n    } else {\n      var record = new record_1.default(this, recordIdsOrId);\n      record.destroy(done);\n    }\n  };\n\n  Table.prototype._listRecords = function (limit, offset, opts, done) {\n    var _this = this;\n\n    if (!done) {\n      done = opts;\n      opts = {};\n    }\n\n    var listRecordsParameters = __assign({\n      limit: limit,\n      offset: offset\n    }, opts);\n\n    this._base.runAction('get', \"/\" + this._urlEncodedNameOrId() + \"/\", listRecordsParameters, null, function (err, response, results) {\n      if (err) {\n        done(err);\n        return;\n      }\n\n      var records = results.records.map(function (recordJson) {\n        return new record_1.default(_this, null, recordJson);\n      });\n      done(null, records, results.offset);\n    });\n  };\n\n  Table.prototype._forEachRecord = function (opts, callback, done) {\n    var _this = this;\n\n    if (arguments.length === 2) {\n      done = callback;\n      callback = opts;\n      opts = {};\n    }\n\n    var limit = Table.__recordsPerPageForIteration || 100;\n    var offset = null;\n\n    var nextPage = function () {\n      _this._listRecords(limit, offset, opts, function (err, page, newOffset) {\n        if (err) {\n          done(err);\n          return;\n        }\n\n        for (var index = 0; index < page.length; index++) {\n          callback(page[index]);\n        }\n\n        if (newOffset) {\n          offset = newOffset;\n          nextPage();\n        } else {\n          done();\n        }\n      });\n    };\n\n    nextPage();\n  };\n\n  return Table;\n}();\n\nmodule.exports = Table;","map":{"version":3,"mappings":"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","names":["base","tableId","tableName","Error","_base","id","name","find","callback_to_promise_1","_findRecordById","select","_selectRecords","bind","create","_createRecords","update","_updateRecords","replace","destroy","_destroyRecord","list","deprecate_1","_listRecords","forEach","_forEachRecord","Table","recordId","done","record","record_1","fetch","params","arguments","length","console","warn","isPlainObject_1","validationResults","query_1","validateParams","errors","formattedErrors","map","error","join","ignoredKeys","validParams","encodeURIComponent","recordsData","optionalParameters","isCreatingMultipleRecords","Array","isArray","requestData","records","fields","runAction","_urlEncodedNameOrId","err","resp","body","result","_this","isDestructiveUpdate","recordsDataOrRecordId","recordDataOrOptsOrDone","optsOrDone","opts","method","recordData","putUpdate","patchUpdate","recordIdsOrId","queryParams","response","results","_a","limit","offset","listRecordsParameters","recordJson","callback","__recordsPerPageForIteration","nextPage","page","newOffset","index","module"],"sources":["../src/table.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}